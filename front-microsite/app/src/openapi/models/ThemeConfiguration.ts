/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Document on Azure Functions
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ThemeConfiguration
 */
export interface ThemeConfiguration {
    /**
     * 
     * @type {number}
     * @memberof ThemeConfiguration
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    tenantId?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    background?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    surface?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    primary?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    primaryDarken1?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    secondary?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    secondaryDarken1?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    error?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    info?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    success?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    warning?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ThemeConfiguration
     */
    isDark?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    tenantIcon?: string;
    /**
     * 
     * @type {string}
     * @memberof ThemeConfiguration
     */
    tenatLogo?: string;
}

/**
 * Check if a given object implements the ThemeConfiguration interface.
 */
export function instanceOfThemeConfiguration(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ThemeConfigurationFromJSON(json: any): ThemeConfiguration {
    return ThemeConfigurationFromJSONTyped(json, false);
}

export function ThemeConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThemeConfiguration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'background': !exists(json, 'background') ? undefined : json['background'],
        'surface': !exists(json, 'surface') ? undefined : json['surface'],
        'primary': !exists(json, 'primary') ? undefined : json['primary'],
        'primaryDarken1': !exists(json, 'primaryDarken1') ? undefined : json['primaryDarken1'],
        'secondary': !exists(json, 'secondary') ? undefined : json['secondary'],
        'secondaryDarken1': !exists(json, 'secondaryDarken1') ? undefined : json['secondaryDarken1'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'info': !exists(json, 'info') ? undefined : json['info'],
        'success': !exists(json, 'success') ? undefined : json['success'],
        'warning': !exists(json, 'warning') ? undefined : json['warning'],
        'isDark': !exists(json, 'isDark') ? undefined : json['isDark'],
        'tenantIcon': !exists(json, 'tenantIcon') ? undefined : json['tenantIcon'],
        'tenatLogo': !exists(json, 'tenatLogo') ? undefined : json['tenatLogo'],
    };
}

export function ThemeConfigurationToJSON(value?: ThemeConfiguration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'tenantId': value.tenantId,
        'background': value.background,
        'surface': value.surface,
        'primary': value.primary,
        'primaryDarken1': value.primaryDarken1,
        'secondary': value.secondary,
        'secondaryDarken1': value.secondaryDarken1,
        'error': value.error,
        'info': value.info,
        'success': value.success,
        'warning': value.warning,
        'isDark': value.isDark,
        'tenantIcon': value.tenantIcon,
        'tenatLogo': value.tenatLogo,
    };
}

