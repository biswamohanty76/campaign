/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Document on Azure Functions
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ThemeConfiguration,
} from '../models';
import {
    ThemeConfigurationFromJSON,
    ThemeConfigurationToJSON,
} from '../models';

export interface GetthemebytenantidRequest {
    guid: string;
}

/**
 * ThemeApi - interface
 * 
 * @export
 * @interface ThemeApiInterface
 */
export interface ThemeApiInterface {
    /**
     * 
     * @param {string} guid TenantId.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ThemeApiInterface
     */
    getthemebytenantidRaw(requestParameters: GetthemebytenantidRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ThemeConfiguration>>;

    /**
     */
    getthemebytenantid(requestParameters: GetthemebytenantidRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ThemeConfiguration>;

}

/**
 * 
 */
export class ThemeApi extends runtime.BaseAPI implements ThemeApiInterface {

    /**
     */
    async getthemebytenantidRaw(requestParameters: GetthemebytenantidRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ThemeConfiguration>> {
        if (requestParameters.guid === null || requestParameters.guid === undefined) {
            throw new runtime.RequiredError('guid','Required parameter requestParameters.guid was null or undefined when calling getthemebytenantid.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/theme/{guid}`.replace(`{${"guid"}}`, encodeURIComponent(String(requestParameters.guid))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ThemeConfigurationFromJSON(jsonValue));
    }

    /**
     */
    async getthemebytenantid(requestParameters: GetthemebytenantidRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ThemeConfiguration> {
        const response = await this.getthemebytenantidRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
